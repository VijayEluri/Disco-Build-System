
<project name="Utilities" default="help" basedir=".">

	<!-- root of this component's build tree -->
	<property name="project-root" location=".." />
	
	<!-- root of the entire workspace -->
	<property name="workspace-root" location="../.." />
	
	<!-- name of the jar file we'll create -->
	<property name="project-jar" value="utilities.jar" />

	<!-- no extra classpath for this project -->
	<path id="project-classpath" />
	
	<!-- no extra classpath for unit testing -->
	<path id="extra-test-classpath" />

	<!-- where we'll generate native code -->
	<property name="gen-src" location="bin/gensrc" />

	<!-- location of native src code -->
	<property name="native-src" location="src/native" />
		
	<!-- import the common build file definitions -->
	<import file="${workspace-root}/Admin/priv/shared/build/build-common.xml" />

	<!-- name of the native library we'll build -->
	<property name="native-lib" location="${pub-dir}/libnativeLib.so" />
		
	<!-- build native methods -->
	<target name="extra-compilation" depends="extra-comp-1, extra-comp-2" />
	
	<target name="extra-comp-1">
		<!-- generate JNI header files -->
		<mkdir dir="${gen-src}" />
		<javah class="com.buildml.utils.os.SystemUtils" classpath="bin" destdir="${gen-src}" />	
		
		<!-- 
		   - Generate and compile the Version.java file, containing version number and copyright year
		   - Note that our copied version of Version.java should be used because the Version.class 
		   - we're creating here will be newer than Version.java, and therefore won't be 
		   - recompiled by the "jars" target.
		  -->
		<tstamp>
		    <format property="YEAR" pattern="yyyy" />
		</tstamp>
		<copy file="src/com/buildml/utils/version/Version.java" 
			tofile="${gen-src}/com/buildml/utils/version/Version.java" overwrite="true">
			<filterset>
				<filter token="YEAR" value="${YEAR}"/>
				<filter token="VERSION" value="${version}"/>
			</filterset>
		</copy>
		<javac srcdir="${gen-src}" destdir="${bin-dir}" includeantruntime="false"/>
	</target>
	
	<target name="check-native-uptodate">
	  <uptodate property="native-uptodate" targetfile="${native-lib}" >
	    <srcfiles dir= "${native-src}" includes="*.c"/>
	  	<srcfiles dir="${gen-src}" includes="*.h" />
	  </uptodate>
	</target>

	<target name="extra-comp-2" depends="check-native-uptodate" unless="native-uptodate">
		<echo>Compiling native methods</echo>
		<mkdir dir="${pub-dir}" />
		<exec executable="gcc" failonerror="true">
			<arg line="-o" />
			<arg line="${native-lib}" />
			<arg line="-fPIC" />
			<arg line="-shared" />
			<arg line="-Wl,-soname,libnative.so" />
			<arg line="-I${gen-src}" />
			<arg line="-I${java.home}/../include" />
			<arg line="-I${java.home}/../include/linux" />
			<arg line="${native-src}/com_buildml_utils_os_SystemUtils.c" />
			<arg line="-lc" />
		</exec>

	</target>
	
	<!-- project-specific clean operations -->
	<target name="project-clean">
		<delete dir="${gen-src}" />
	</target>

		
</project>