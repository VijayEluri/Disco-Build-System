BuildML Eclipse Plug-in Test Plan
---------------------------------

Given that we don't yet have automated testing for the BuildML Eclipse Plug-in, the following manual tests should be performed
before each software release. As new GUI features are added, corresponding test cases should also be documented here.

Creating New Files and Importing
--------------------------------

* Create an empty file
  - Select “File -> New -> BuildML File” and create a new build.bml file in the Eclipse workspace. The file should 
    automatically open in the BuildML editor, albeit empty.
  - Flip between the Files and Action tabs, to ensure that both are empty.
  - For error checking purposes, go back to the "New -> BuildML File" and try various values in the "parent folder"
    and "file name" fields. The "Finish" button should be grayed out if the field values are invalid (invalid
    folder, or file name that doesn't end with .bml).

* Import a directory hierarchy.
  - Select “File -> Import -> Import Directory Hierarchy”.
  - Try out various value in the input fields, making sure that the "Finish" button is grayed out if not all
    input fields are valid (invalid directory, or invalid .bml file).
  - Select “/usr/include” as the directory to include, and select your new build.bml file from the “choose open buildml 
    file” field.
  - Click “finish”, the check that the “files” tab contains the content of the /usr/include directory. The actions tab 
    should remain empty.
  - Repeat the import with a new build2.bml file, but make sure the file is not open. When you perform the import, you won’t be
    presented with a “choose open buildml file” field, so instead you should browse for the build2.bml file.
  - Repeat the import with both build.bml and build2.bml. You should see that both files are listed in the “choose open 
    buildml file” field. Selecting each option will fill in the absolute path of the .bml file.

Renaming Files
--------------

* Test that the editor knows that it has been moved/renamed.
  - Open a build.bml file in the editor.
  - Modify the name of the editor (in the package explorer). The name at the top of the editor should change to the
    new name.
  - Make a modification to the editor (such as adding a new package).
  - Save the dirty editor, then reload the editor to ensure that the change got saved to the file's new location.
  - Repeat, but this time change the name of the project that contains the editor file.
  - Finally, with the editor still open, go to the "Import -> Legacy Build" wizard and check that the editor's
    correct (new) location appears in the .bml file combo box.


Browsing the Files tab
----------------------

* Basic browsing:
  - Browse the file hierarchy, opening and closing folder nodes. Double-clicking on a folder will expand the content
    of that folder (or contract it).
  - Right click on a folder and select “Expand Subtree”. This will fully expand all the descendants of the folder. 
    Pressing Ctrl-E should do the same thing.
  - Right click on a (non-folder) file and see that Expand Subtree is greyed out.
  - Press “Ctrl-A” to select all nodes, then use “Ctrl-E” to expand all the files/folders.
  - Notice that each file type is associated with an appropriate icon for that type of file.
  - Double click on a file should open it (assuming it exists on the file system). Try different types of file 
    (.c, .h, .java, .o, etc) to see that different editors are opened.

* Hiding and Revealing:
  - Select one or more files (or folders), then right click and select “Hide selected”. The nodes should vanish.
  - Repeat the operation, but this time use the “Del” key to hide the files.
  - On the tool bar, select the “Reveal items that were previously hidden” button and check that the hidden files 
    appear, but greyed out.
  - Select a subset of the files that you hid, and reveal them by right-clicking and selecting “Reveal Selected.”
  - Repeat, but this time use the “Ins” key.

Opening and Saving Files
------------------------

* Open a build.bml file that’s in the current Eclipse workspace.
  - Make a copy of the open file – the file should remain open, with the new file also appearing in package 
    explorer (but not opening).
  - Change the name of the open file – The name of file at top of editor window should change.
  - Delete an open file – The editor should close.
  - Rename the copy of the file back to original name, and open it again – The content should be the same as the
    original file.
  - Add a file system root to the editor, then save, close editor, then reopen – the root should be intact.
  - Add a second file system root, then quit without saving – The root should not be there. 
  - Use saveAs to save the current editor with a new name (use the suggested name in the save-as dialog). The current
    editor’s tab name should be updated. Make a change in the new editor, save it, then verify that only the new file
    has the change.

* Open build.bml file that resides outside of the Eclipse workspace (using File -> Open File)
  - Add a file system root to the editor, then save, close editor, then reopen – the root should be intact.
  - Add a second file system root, then quit without saving – The root should not be there. 
  - Use saveAs to save the current editor with a new name (which must be in the workspace). The current editor’s
    tab name should be updated. Make a change in the new editor, save it, then verify that only the new file
    has the change.

Testing the Web Site / Update Site
----------------------------------

* Testing the tar-ball
  - Download the latest tar-ball from the www.buildml.com web site.
  - extract the tar-ball onto the local filesystem, the set PATH to include the bin/ directory.
  - Using that version of "bml" do "bml scan-build make" on some make-based build.
  - Use "bml show-files" and "bml show-actions" to convince yourself that the import worked.
  
* Testing the plug-in
  - In Eclipse, go to "Help -> Install Software" and select "http://www.buildml.com/update" as the
    update site. Proceed to install the software.
  - Attempt to load the build.bml file that was created by the "bml" script (see above). Do some
    basic sanity testing.
  - Browse the "Help -> About Eclipse" menu, and check that the plug-in is correctly described
    (copyright, etc).
  - Uninstall the plugin (so it doesn't get in the way of development).
    
Testing the Outline View
------------------------

* Add an empty build.bml file and switch to that editor.
* Check that the outline contains "Root" and "<import>", but nothing else.
* Right click, without selecting a node in the tree. Only "New Package" and "New Package Folder"
  should be enabled.
* Right click on "Root" and "<import>". Ensure that neither of them can be removed or renamed.
* Click on the "Add BuildML Package Folder" icon - a new folder should appear, called "Untitled". 
  Rename this to "Graphics".
* With "Graphics" selected, click on the "New BuildML Package" icon. The new package should appear
  inside the Graphics folder. Rename this package to "jpeg".
* With "jpeg" selected, click on the "New BuildML Package" icon again. The package should be created
  at the same level as "jpeg". Call this package "gif".
* Check that the two packages are listed in alphabetical order.
* Now add "png" and "bmp", but this time, use the context menu to add the new package.
* Within "Graphics", create a sub-folder by clicking on the "New BuildML Package Folder" button. Call
  this folder "Static".
* In the same way, use the context menu to create another sub-folder called "Moving".
* For each of the existing packages (bmp, gif, jpeg, etc), drag and drop the package into the
  "Static" folder.
* Using the "Rename" menu item, rename "Moving" to "Movies".
* Try to remove the "Static" folder (from the context menu) - the menu choice should be greyed out.
* Trying to remove the "Movies" folder will succeed.
* At the top level, create a new folder named "File Formats". This should fail due to the space in
  the name. Repeat again, but this time use "File-Formats".
* Click undo (Ctrl-Z or Edit->Redo menu) once to undo the rename. Click a second time to completely
  remove the new folder.
* Click redo twice to redo the folder creation, and redo the renaming.
* Drag/drop all packages into the "File-Formats" folder. Then undo all the moves. Finally, redo all
  the moves.
* Delete the "bmp" and "gif" packages, then undo the delete.
* Drag/drop the "File-Formats"  folder inside the Graphics folder. Then undo and redo.




