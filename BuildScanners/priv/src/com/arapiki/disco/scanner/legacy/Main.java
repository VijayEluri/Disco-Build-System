/*******************************************************************************
 * Copyright (c) 2010 Arapiki Solutions Inc.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    "Peter Smith <psmith@arapiki.com>" - initial API and 
 *        implementation and/or initial documentation
 *******************************************************************************/ 

package com.arapiki.disco.scanner.legacy;

import java.io.FileNotFoundException;
import java.io.IOException;

public class Main {

	/**
	 * Parse the command line arguments. 
	 * @param args The standard Java command line array.
	 * @return The name of the trace file to parse.
	 */
	private static String parseArgs(String[] args) {
		/*
		 * Usage: disco-legacy-scanner [ <trace-file-name> ]
		 *   where <trace-file-name> was generated by cfs.
		 */
		String fileName = null;
		
		/* if no argument provided, default to "cfs.trace" */
		if (args.length == 0) {
			fileName = "cfs.trace";
			
		/* else the user has provided a file name to import from */
		} else if (args.length == 1) {
			fileName = args[0];
			
		/* no other options available at this time */
		} else {
			System.err.println("Usage: disco-legacy-scanner [ <trace-file-name> ]");
			System.exit(-1);
		}
		return fileName;
	}

	
	/**
	 * The main entry point for the legacy build scanner.
	 * @param args The standard Java command line array.
	 */
	public static void main(String[] args) {
		
		String fileName = parseArgs(args);
		
		/*
		 * Very simple - create a new scanner, parse the file, and close the scanner.
		 * Errors will be reported, as necessary.
		 */
		TraceFileScanner scanner = null;
		try {
			scanner = new TraceFileScanner(fileName);
			scanner.parse();
			scanner.close();
			
		} catch (FileNotFoundException e) {
			System.err.println("Error: Trace file not found: " + fileName);
			System.exit(-1);
			
		} catch (IOException e) {
			System.err.println("Error: Can't parse trace file: " + fileName);
			System.exit(-1);
		}
		
	}
}
